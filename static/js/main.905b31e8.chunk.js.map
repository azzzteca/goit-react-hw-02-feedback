{"version":3,"sources":["components/Statistics/Statistics.module.css","components/App/App.module.css","components/Section/Section.jsx","components/StatisticsElement/StatisticsElement.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","counters/counters.js","components/Feedback/Feedback.jsx","components/App/App.js","index.js","components/StatisticsElement/StatisticsElement.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Section","title","children","StatisticsElement","feedback","Object","keys","map","element","className","s","item","itemInfo","Statistics","total","positivePercentage","good","neutral","bad","noFeedbackMassage","statisticsInfo","FeedbackOptions","changeCoutFeedback","buttons","form","onClick","button","id","type","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Feedback","App","state","props","handleChangeFeedbackCount","evt","target","tagName","setState","prevState","app","this","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,KAAO,yBAAyB,SAAW,6BAA6B,kBAAoB,wC,mBCAlKD,EAAOC,QAAU,CAAC,IAAM,mB,uHCCjB,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC/B,OACE,gCACE,6BAAKD,IACJC,K,oBCHA,SAASC,EAAT,GAA0C,IAAbC,EAAY,EAAZA,SAElC,OADiBC,OAAOC,KAAKF,GACbG,KAAI,SAAAC,GAClB,OACE,oBAAkBC,UAAWC,IAAEC,KAA/B,SACE,uBAAMF,UAAWC,IAAEE,SAAnB,UACGJ,EADH,KACcJ,EAASI,OAFhBA,M,oBCHR,SAASK,EAAT,GAA8D,IAAxCT,EAAuC,EAAvCA,SAAUU,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACpCC,EAAuBZ,EAAvBY,KAAMC,EAAiBb,EAAjBa,QAASC,EAAQd,EAARc,IAEvB,OAAOF,EAAOC,EAAUC,IAAQ,EAC9B,oBAAIT,UAAWC,IAAES,kBAAjB,+BAEA,gCACE,4CACA,qBAAIV,UAAWC,IAAEU,eAAjB,UACE,cAACjB,EAAD,CAAmBC,SAAUA,IAE7B,oBAAIK,UAAWC,IAAEC,KAAjB,SACE,uBAAMF,UAAWC,IAAEE,SAAnB,oBAAqCE,EAAME,EAAMC,EAASC,QAE5D,oBAAIT,UAAWC,IAAEC,KAAjB,SACE,uBAAMF,UAAWC,IAAEE,SAAnB,gCACsBG,EAAmBC,EAAMC,EAASC,c,oBCjB3D,SAASG,EAAT,GAA4D,IAAjCjB,EAAgC,EAAhCA,SAAUkB,EAAsB,EAAtBA,mBACpCC,EAAUlB,OAAOC,KAAKF,GAE5B,OACE,sBAAMK,UAAWC,IAAEc,KAAMC,QAASH,EAAlC,SACGC,EAAQhB,KAAI,SAAAmB,GACX,OACE,wBAAqBC,GAAID,EAAQE,KAAK,SAASnB,UAAWC,IAAEgB,OAA5D,SACGA,GADUA,QCVhB,SAASG,EAAmBb,EAAMC,EAASC,GAChD,OAAOF,EAAOC,EAAUC,EAGnB,SAASY,EAAgCd,EAAMC,EAASC,GAC7D,OAAa,IAATF,EACEC,EAAUC,IAAQ,EACb,QAEAa,KAAKC,MAAOhB,GAAQA,EAAOC,EAAUC,GAAQ,KAAO,KAIxD,KCcMe,MAlBf,YAAqD,IAAjC7B,EAAgC,EAAhCA,SAAUkB,EAAsB,EAAtBA,mBAC5B,OACE,8BACE,eAACtB,EAAD,CAASC,MAAM,wBAAf,UACE,cAACoB,EAAD,CACEjB,SAAUA,EACVkB,mBAAoBA,IAEtB,cAACT,EAAD,CACET,SAAUA,EACVU,MAAOe,EACPd,mBAAoBe,U,iBChBxBI,E,4MAOJC,MAAQ,CACNnB,KAAM,EAAKoB,MAAMpB,KACjBC,QAAS,EAAKmB,MAAMnB,QACpBC,IAAK,EAAKkB,MAAMlB,K,EAGlBmB,0BAA4B,SAAAC,GACC,WAAvBA,EAAIC,OAAOC,SAIf,EAAKC,UAAS,SAAAC,GAAS,sBACpBJ,EAAIC,OAAOZ,GAAKe,EAAUJ,EAAIC,OAAOZ,IAAM,O,4CAIhD,WACE,OACE,qBAAKlB,UAAWC,IAAEiC,IAAlB,SACE,cAAC,EAAD,CACEvC,SAAUwC,KAAKT,MACfb,mBAAoBsB,KAAKP,kC,GA5BjBQ,aAAZX,EACGY,aAAe,CACpB9B,KAAM,EACNC,QAAS,EACTC,IAAK,GA+BMgB,QCnCfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BrD,EAAOC,QAAU,CAAC,KAAO,gCAAgC,SAAW,sC,kBCApED,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.905b31e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsInfo\":\"Statistics_statisticsInfo__1sRiZ\",\"item\":\"Statistics_item__3l25f\",\"itemInfo\":\"Statistics_itemInfo__18XyP\",\"noFeedbackMassage\":\"Statistics_noFeedbackMassage__2f7WP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1piHr\"};","import PropTypes from 'prop-types';\n\nexport function Section({ title, children }) {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import PropTypes from 'prop-types';\nimport s from './StatisticsElement.module.css';\n\nexport function StatisticsElement({ feedback }) {\n  const elements = Object.keys(feedback);\n  return elements.map(element => {\n    return (\n      <li key={element} className={s.item}>\n        <span className={s.itemInfo}>\n          {element}: {feedback[element]}\n        </span>\n      </li>\n    );\n  });\n}\n\nStatisticsElement.propTypes = {\n  feedback: PropTypes.objectOf(PropTypes.number),\n};\n","import PropTypes from 'prop-types';\nimport { StatisticsElement } from '../StatisticsElement/StatisticsElement';\nimport s from './Statistics.module.css';\n\nexport function Statistics({ feedback, total, positivePercentage }) {\n  const { good, neutral, bad } = feedback;\n\n  return good + neutral + bad === 0 ? (\n    <h3 className={s.noFeedbackMassage}>No feedback given</h3>\n  ) : (\n    <div>\n      <h2>Statistics</h2>\n      <ul className={s.statisticsInfo}>\n        <StatisticsElement feedback={feedback} />\n\n        <li className={s.item}>\n          <span className={s.itemInfo}>Total: {total(good, neutral, bad)}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.itemInfo}>\n            Positive feedback: {positivePercentage(good, neutral, bad)}\n          </span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  total: PropTypes.func,\n  positivePercentage: PropTypes.func,\n  feedback: PropTypes.objectOf(PropTypes.number),\n};\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nexport function FeedbackOptions({ feedback, changeCoutFeedback }) {\n  const buttons = Object.keys(feedback);\n\n  return (\n    <form className={s.form} onClick={changeCoutFeedback}>\n      {buttons.map(button => {\n        return (\n          <button key={button} id={button} type=\"button\" className={s.button}>\n            {button}\n          </button>\n        );\n      })}\n    </form>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  feedback: PropTypes.objectOf(PropTypes.number),\n  changeCoutFeedback: PropTypes.func,\n};\n","export function countTotalFeedback(good, neutral, bad) {\n  return good + neutral + bad;\n}\n\nexport function countPositiveFeedbackPercentage(good, neutral, bad) {\n  if (good !== 0) {\n    if (neutral + bad === 0) {\n      return 100 + ' %';\n    } else {\n      return Math.round((good / (good + neutral + bad)) * 100) + ' %';\n    }\n  }\n\n  return 0 + '%';\n}\n","import PropTypes from 'prop-types';\nimport { Section } from '../Section/Section';\nimport { Statistics } from '../Statistics/Statistics';\nimport { FeedbackOptions } from '../FeedbackOptions/FeedbackOptions';\nimport {\n  countTotalFeedback,\n  countPositiveFeedbackPercentage,\n} from '../../counters/counters';\n\nfunction Feedback({ feedback, changeCoutFeedback }) {\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          feedback={feedback}\n          changeCoutFeedback={changeCoutFeedback}\n        />\n        <Statistics\n          feedback={feedback}\n          total={countTotalFeedback}\n          positivePercentage={countPositiveFeedbackPercentage}\n        />\n      </Section>\n    </div>\n  );\n}\n\nexport default Feedback;\n\nFeedback.propTypes = {\n  feedback: PropTypes.objectOf(PropTypes.number),\n  changeCoutFeedback: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport Feedback from '../Feedback/Feedback';\nimport s from './App.module.css';\n\nclass App extends Component {\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  state = {\n    good: this.props.good,\n    neutral: this.props.neutral,\n    bad: this.props.bad,\n  };\n\n  handleChangeFeedbackCount = evt => {\n    if (evt.target.tagName !== 'BUTTON') {\n      return;\n    }\n\n    this.setState(prevState => ({\n      [evt.target.id]: prevState[evt.target.id] + 1,\n    }));\n  };\n\n  render() {\n    return (\n      <div className={s.app}>\n        <Feedback\n          feedback={this.state}\n          changeCoutFeedback={this.handleChangeFeedbackCount}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"StatisticsElement_item__3KSlA\",\"itemInfo\":\"StatisticsElement_itemInfo__7cARc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__JVEqa\"};"],"sourceRoot":""}